name: Helm Deployment Test

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: blaqr/earthquake

jobs:
  helm-deployment-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        kubernetes-version: ['1.27.0', '1.28.0', '1.29.0']
        include:
          - kubernetes-version: '1.27.0'
            minikube-version: '1.30.0'
          - kubernetes-version: '1.28.0'
            minikube-version: '1.31.0'
          - kubernetes-version: '1.29.0'
            minikube-version: '1.32.0'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        
    - name: Start Minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: ${{ matrix.minikube-version }}
        kubernetes-version: ${{ matrix.kubernetes-version }}
        driver: docker
        start-args: --memory=4096 --cpus=2
        
    - name: Enable Minikube addons
      run: |
        minikube addons enable storage-provisioner
        minikube addons enable default-storageclass
        minikube addons enable metrics-server
        
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'
        
    - name: Verify Kubernetes cluster
      run: |
        kubectl cluster-info
        kubectl get nodes
        
    - name: Run Helm deployment tests with pytest
      run: |
        CLEANUP=false pytest test_helm_deployment.py::TestHelmDeployment -v
        
    - name: Cleanup test deployment
      if: always()
      run: |
        helm uninstall quackwatch-helm --ignore-not-found || true
        
    - name: Show cluster info on failure
      if: failure()
      run: |
        echo "=== Cluster Resources ==="
        kubectl get all -o wide
        echo "=== Pod Logs ==="
        kubectl logs -l app.kubernetes.io/instance=quackwatch-helm --tail=50 --all-containers=true || true
        echo "=== Pod Details ==="
        kubectl describe pods -l app.kubernetes.io/instance=quackwatch-helm || true
        echo "=== Helm Status ==="
        helm list -A
        helm status quackwatch-helm -n default || true
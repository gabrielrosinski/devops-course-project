name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: blaqr/earthquake

jobs:
  build:
    name: Build and Test Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        
    - name: Lint and code quality checks
      run: |
        echo "🔍 Running code quality checks..."
        # Add your linting/formatting checks here if needed
        # flake8 QuakeWatch/ || true
        # black --check QuakeWatch/ || true
        
    - name: Validate Helm chart
      run: |
        echo "🔧 Installing Helm..."
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        echo "✅ Validating Helm chart..."
        helm lint quackwatch-helm/
        helm template quackwatch-helm/ > /dev/null
        echo "✅ Helm chart validation completed"

  helm-deployment-test:
    name: Helm Deployment Test (K8s ${{ matrix.kubernetes-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build

    strategy:
      matrix:
        kubernetes-version: ['1.27.0', '1.28.0', '1.29.0']
        include:
          - kubernetes-version: '1.27.0'
            minikube-version: '1.30.0'
          - kubernetes-version: '1.28.0'
            minikube-version: '1.31.0'
          - kubernetes-version: '1.29.0'
            minikube-version: '1.32.0'
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        
    - name: Start Minikube
      uses: medyagh/setup-minikube@master
      with:
        minikube-version: ${{ matrix.minikube-version }}
        kubernetes-version: ${{ matrix.kubernetes-version }}
        driver: docker
        start-args: --memory=4096 --cpus=2
        
    - name: Enable Minikube addons
      run: |
        minikube addons enable storage-provisioner
        minikube addons enable default-storageclass
        minikube addons enable metrics-server
        
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'
        
    - name: Verify Kubernetes cluster
      run: |
        echo "🔧 Verifying K8s ${{ matrix.kubernetes-version }} cluster..."
        kubectl cluster-info
        kubectl get nodes -o wide
        
    - name: Run Helm deployment tests
      run: |
        echo "🚀 Testing Helm deployment on K8s ${{ matrix.kubernetes-version }}..."
        CLEANUP=false pytest test_helm_deployment.py::TestHelmDeployment -v --tb=short
        
    - name: Cleanup test deployment
      if: always()
      run: |
        echo "🧹 Cleaning up test deployment..."
        helm uninstall quackwatch-helm --ignore-not-found || true
        
    - name: Debug on failure
      if: failure()
      run: |
        echo "❌ Debugging failed deployment on K8s ${{ matrix.kubernetes-version }}..."
        echo "=== Cluster Resources ==="
        kubectl get all -o wide
        echo "=== Pod Logs ==="
        kubectl logs -l app.kubernetes.io/instance=quackwatch-helm --tail=50 --all-containers=true || true
        echo "=== Pod Details ==="
        kubectl describe pods -l app.kubernetes.io/instance=quackwatch-helm || true
        echo "=== Helm Status ==="
        helm list -A
        helm status quackwatch-helm -n default || true